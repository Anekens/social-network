{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","utils/validators/objects-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Common/FormsControls/FormsControls.js","components/Common/Preloader/Preloader.js","components/Common/FormsControls/FormsControls.module.css","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css","utils/validators/validators.js","redux/profile-reducer.js"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","settings","Music","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","props","user","alt","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","error","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validate","component","text","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likeCount","profile","addPostActionCreator","newPostText","setStatus","getUsersProfile","newPost","postId"],"mappings":"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","file":"static/js/main.2b536b16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2WGBD\",\"item\":\"Navbar_item__3sV26\",\"settings\":\"Navbar_settings__MYrWI\",\"activeLink\":\"Navbar_activeLink__3K-oy\"};","const SEND_MESSAGE = 'social-network/dialogs/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vitalik'},\r\n        {id: 2, name: 'Grigori'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Feliks'},\r\n        {id: 5, name: 'Kliment'},\r\n        {id: 6, name: 'Boris'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your It-Kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__23OTL\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.8d6368fb.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n\r\n};\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Post is cached for offline use.\" message.\n              console.log('Post is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n\r\n            <div className={`${s.item} ${s.settings}`}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar","import React from 'react';\r\n\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music","import React from 'react';\r\n\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News","import React from 'react';\r\n\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/validators/objects-helpers\";\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreators\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + props.user.id}>\r\n                        <img alt={\"avatar\"} src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {props.user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.unfollow(props.user.id)\r\n                                  }}>\r\n                            Unfollow\r\n                        </button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.follow(props.user.id)\r\n                                  }}>\r\n                            Follow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{props.user.name}</div>\r\n                    <div>{props.user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}\r\n                       totalItemsCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}/>\r\n            <div>\r\n                {props.users.map(u => <User user={u}\r\n                                      key={u.id}\r\n                                      followingInProgress={props.followingInProgress}\r\n                                      unfollow={props.unfollow}\r\n                                      follow={props.follow}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\n\r\n const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=> {\r\n    return users.filter(u => true)\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n    })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt={\"logo\"} src=\"https://seeklogo.com/images/G/globo-logo-486706AB94-seeklogo.com.png\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'} activeClassName={s.activeLink}>Log in</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n","import React from 'react'\r\nimport { reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport s from '../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input,\r\n                {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"},\r\n                \"remember me\")}\r\n            {props.error &&\r\n            <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm","import React from 'react'\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        )\r\n    }\r\n};","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SocialNetworkApp = () => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default SocialNetworkApp;\n\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport SocialNetworkApp from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validate}\r\n               component={component}\r\n               {...props}/>{text}\r\n    </div>);\r\n\r\n\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{backgroundColor: 'white'}}>\r\n            <img alt={\"preloader\"} src={preloader}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__13j8q\",\"error\":\"FormsControls_error__1gvyg\",\"formSummaryError\":\"FormsControls_formSummaryError__20Pd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2snVy\",\"pageNumber\":\"Paginator_pageNumber__17yIn\",\"selectedPage\":\"Paginator_selectedPage__32gi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__hbBi0\",\"loginBlock\":\"Header_loginBlock__2qdNL\",\"activeLink\":\"Header_activeLink__3e3dl\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Its my first post', likeCount: 12},\r\n        {id: 2, message: 'Hi, how are you?', likeCount: 14}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(response.data));\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}