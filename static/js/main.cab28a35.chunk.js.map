{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/users.module.css","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","message","likeCount","newPostText","profileReducer","state","action","type","newPost","newText","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","users","usersReducer","map","u","userId","followed","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","settings","ProfileInfo","image","alt","descriptionBlock","Post","props","likesCount","MyPosts","postsElements","p","newPostElement","React","createRef","postBlocks","ref","onChange","text","current","value","updateNewPostText","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostActionCreator","Profile","Music","News","Settings","DialogItem","path","dialog","active","Message","Dialogs","dialogsElements","d","key","messagesElements","m","dialogsItems","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","length","setUsers","photoUrl","fullName","status","city","country","userPhoto","unfollow","follow","usersId","setUsersAC","App","render","UsersContainer","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cab28a35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2WGBD\",\"item\":\"Navbar_item__3sV26\",\"settings\":\"Navbar_settings__MYrWI\",\"activeLink\":\"Navbar_activeLink__3K-oy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DhsW\",\"dialogsItems\":\"Dialogs_dialogsItems__AiM9U\",\"dialog\":\"Dialogs_dialog__19v16\",\"active\":\"Dialogs_active__1hUnB\",\"messages\":\"Dialogs_messages__1n0p_\",\"message\":\"Dialogs_message__9-P57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1eNxW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__e50al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlocks\":\"MyPosts_postBlocks__16lX_\",\"posts\":\"MyPosts_posts__1SWqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__hbBi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3jJBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__23OTL\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Post is cached for offline use.\" message.\n              console.log('Post is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 12},\r\n        {id: 2, message: 'Its my first post', likeCount: 14},\r\n        {id: 2, message: 'Its my first post', likeCount: 14},\r\n        {id: 2, message: 'Its my first post', likeCount: 14}\r\n    ],\r\n    newPostText: 'it-kamasutra'\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vitalik'},\r\n        {id: 2, name: 'Grigori'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Feliks'},\r\n        {id: 5, name: 'Kliment'},\r\n        {id: 6, name: 'Boris'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your It-Kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {users:[]};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...state.users, ...action.users]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store=store;\r\n\r\nexport default store","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://seeklogo.com/images/G/globo-logo-486706AB94-seeklogo.com.png\"  />\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.settings}`}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.image}>\r\n                <img\r\n                    src=\"https://www.mountsinai.org/files/MSHealth/Assets/Media/final/new-york-city-brooklyn-bridge-2.jpg\"\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://whatsism.com/uploads/posts/2018-05/thumbs/1525374264_7f85e7b.jpeg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likeCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postBlocks}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <textarea ref={newPostElement}\r\n                                  onChange={onPostChange}\r\n                                  value={props.newPostText}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onAddPost}>Add post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from \"./Music.module.css\"\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music","import React from 'react';\r\nimport s from \"./News.module.css\"\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News","import React from 'react';\r\nimport s from \"./Settings.module.css\"\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message","import React from 'react';\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder='Enter your message'>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer","import React from 'react'\r\nimport s from './users.module.css'\r\n\r\nlet Users = (props) => {\r\n    if (props.users.length === 0) {\r\n\r\n    props.setUsers([\r\n            {\r\n                id: 1,\r\n                photoUrl: 'http://pp.userapi.com/yuyiUoWX3Vz5J0OEqQ3epUc-ulGnS90jiDG3YQ/YTXzdrfOWAI.jpg?ava=1',\r\n                followed: false,\r\n                fullName: 'Dmitry',\r\n                status: 'I am boss',\r\n                location: {city: 'Minsk', country: 'Belarus'}\r\n            },\r\n            {\r\n                id: 2,\r\n                photoUrl: 'http://pp.userapi.com/yuyiUoWX3Vz5J0OEqQ3epUc-ulGnS90jiDG3YQ/YTXzdrfOWAI.jpg?ava=1',\r\n                followed: true,\r\n                fullName: 'Sasha',\r\n                status: 'I am boss too',\r\n                location: {city: 'Moscow', country: 'Russia'}\r\n            },\r\n            {\r\n                id: 3,\r\n                photoUrl: 'http://pp.userapi.com/yuyiUoWX3Vz5J0OEqQ3epUc-ulGnS90jiDG3YQ/YTXzdrfOWAI.jpg?ava=1',\r\n                followed: false,\r\n                fullName: 'Andrew',\r\n                status: 'I am boss too',\r\n                location: {city: 'Kiev', country: 'Ukraine'}\r\n            },\r\n        ]\r\n    );\r\n}\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <img src={u.photoUrl} className={s.userPhoto}/>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }}>Unfollow</button>\r\n                                : <button onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{u.fullName}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{u.location.country}</div>\r\n                            <div>{u.location.city}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React from 'react'\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (usersId) => {\r\n            dispatch(followAC(usersId))\r\n        },\r\n        unfollow: (usersId) => {\r\n            dispatch(unfollowAC(usersId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                <Route path='/profile' render={() => <Profile />}/>\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/users' render={() => <UsersContainer/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}