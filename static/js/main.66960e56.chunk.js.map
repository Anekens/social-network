{"version":3,"sources":["redux/messages-reducer.js","components/Settings/Settings.module.css","assets/images/buttons/prevBtn.svg","assets/images/buttons/nextBtn.svg","assets/images/preloader/Spinner-1s-200px.svg","components/Common/Preloader/Preloader.module.css","components/Users/users.module.css","components/Navbar/Navbar.module.css","assets/images/user.png","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Settings/Settings.jsx","utils/validators/objects-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Common/Paginator/Paginator.module.css","components/Common/Preloader/Preloader.js","components/Header/Header.module.css","utils/validators/validators.js","App.module.css","api/api.js","redux/profile-reducer.js"],"names":["initialState","usersData","name","id","avatar","ava","messagesData","text","dialogs","you","message","messagesReducer","state","action","type","newMessage","sendMessage","dispatch","reset","module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validate","component","Dialog","textareaDialog","errorMessage","Boolean","window","location","hostname","match","Navbar","nav","navList","item","to","activeClassName","activeNav","settings","Settings","content","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","btn","onClick","btnIcon","src","prev","p","cn","selectedPage","pageNumber","key","e","next","User","wrapper","user","alt","photos","small","userPhoto","info","status","button","follow","disabled","some","unfollow","Users","main","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","isAuth","login","logout","header","banner","logFrom","logoutBtn","SET_USER_DATA","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","response","getCaptchaUrl","securityAPI","url","authReducer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","required","formSummaryError","password","rememberMe","captcha","messages","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","fallback","DialogsContainer","lazy","MessagesContainer","ProfileContainer","App","initializeApp","addEventListener","catchAllUnhandledErrors","removeEventListener","bg","exact","path","render","AppContainer","withRouter","promise","Promise","all","then","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","container","preloader","value","maxLengthCreator","maxLength","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","getProfile","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","FormData","append","saveProfile","profile","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","DELETE_POST","posts","likeCount","addPostActionCreator","newPostText","setStatus","getUsersProfile","file","getState","reject","newPost","postId"],"mappings":"uwBAKA,IAEIA,EAAe,CACfC,UAAW,CACP,CAACC,KAAM,MAAOC,GAAI,EAAGC,OAAQC,KAC7B,CAACH,KAAM,OAAQC,GAAI,EAAGC,OAAQC,KAC9B,CAACH,KAAM,QAASC,GAAI,EAAGC,OAAQC,KAC/B,CAACH,KAAM,OAAQC,GAAI,EAAGC,OAAQC,KAC9B,CAACH,KAAM,aAAcC,GAAI,EAAGC,OAAQC,KACpC,CAACH,KAAM,SAAUC,GAAI,EAAGC,OAAQC,MAEpCC,aAAc,CACV,CAACC,KAAM,KAAMJ,GAAI,GACjB,CAACI,KAAM,gBAAiBJ,GAAI,GAC5B,CAACI,KAAM,aAAcJ,GAAI,GACzB,CAACI,KAAM,OAAQJ,GAAI,GACnB,CAACI,KAAM,KAAMJ,GAAI,GACjB,CAACI,KAAM,UAAWJ,GAAI,IAE1BK,QAAS,CACL,CAACC,KAAK,EAAMC,QAAS,MACrB,CAACD,KAAK,EAAOC,QAAS,qBAqBfC,IAhBU,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCACvD,OAAQA,EAAOC,MACX,IA5Ba,eA6BT,IAAIC,EAAa,CACbN,KAAK,EACLC,QAASG,EAAOH,SAEpB,OAAO,EAAP,GACOE,EADP,CAEIJ,QAAQ,GAAD,mBAAMI,EAAMJ,SAAZ,CAAqBO,MAGpC,QAAS,OAAOH,IAMxB,IAEaI,EAAc,SAACT,GACxB,OAAO,SAACU,GACJA,EAJ4B,CAAEH,KA5CjB,eA4CqCJ,QAI3BH,IACvBU,EAASC,YAAM,wB,oBCrDvBC,EAAOC,QAAU,CAAC,QAAU,4B,oBCD5BD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,yDCA9BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,QAAU,uBAAuB,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,sBAAsB,OAAS,wB,mBCA1SD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,0B,mBCD1JD,EAAOC,QAAU,IAA0B,kC,6NCIrCC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC3CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,KACxD,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAACC,GAAW,IACzBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADW,YACYF,EADZ,2BAE/B,OAAO,kBAACX,EAAgBW,EAAO,8CAAcV,EAAWW,MAG/CE,EAAQ,SAACH,GAAW,IACtBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADQ,YACeF,EADf,2BAE5B,OAAO,kBAACX,EAAgBW,EAAO,2CAAWV,EAAWW,MAG5CG,EAAc,SAACC,EAAanC,EAAMoC,EAAUC,GAA9B,IAAyCP,EAAzC,uDAAiD,GAAIzB,EAArD,uDAA4D,GAA5D,OACvB,6BACI,kBAAC,IAAD,eAAO8B,YAAaA,EACbnC,KAAMA,EACNoC,SAAUA,EACVC,UAAWA,GACPP,IAASzB,IAGfiC,EAAS,SAAC,GAAmB,IAAlBlB,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAErBE,EAAQF,EAAKC,SAAWD,EAAKE,MAEnC,OACI,6BACI,4CAAUG,UAAWH,EAAQI,IAAEY,eAAiB,IAAMZ,IAAEJ,MACpDI,IAAEY,gBAAoBnB,IACzBG,GAAS,0BAAMG,UAAWC,IAAEa,cAAenB,EAAKE,U,mBC1C7DN,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,SAAW,gCAAgC,eAAiB,sCAAsC,aAAe,oCAAoC,WAAa,oC,kFCWjTuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uGCOSC,EArBA,WACX,OACI,yBAAKpB,UAAWC,IAAEoB,KACd,yBAAKrB,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAEsB,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBxB,IAAEyB,WAA1C,YAEJ,yBAAK1B,UAAWC,IAAEsB,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBxB,IAAEyB,WAA1C,aAEJ,yBAAK1B,UAAWC,IAAEsB,MACd,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBxB,IAAEyB,WAAxC,UAEJ,yBAAK1B,UAAS,UAAKC,IAAEsB,KAAP,YAAetB,IAAE0B,WAC3B,kBAAC,IAAD,CAASH,GAAG,YAAYC,gBAAiBxB,IAAEyB,WAA3C,gB,kBCLLE,EARE,WACb,OACI,yBAAK5B,UAAWC,IAAE4B,SAAlB,a,6RCPD,IAAMC,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,E,yVACZ,CAAP,GAAWI,EAAX,GAAiBF,GAEdE,M,yjBCFf,IAAMC,EAAS,8BACTC,EAAW,gCACXC,EAAY,iCACZC,EAAmB,wCACnBC,EAAwB,6CACxBC,EAAqB,0CAGrBtE,EAAe,CACjBuE,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAwCZC,EAAgB,SAACC,GAAD,MAAa,CAAChE,KAAMmD,EAAQa,WAC5CC,EAAkB,SAACD,GAAD,MAAa,CAAChE,KAAMoD,EAAUY,WAEhDE,EAAiB,SAACN,GAAD,MAAkB,CAAC5D,KAAMsD,EAAkBM,gBAK5DO,EAAmB,SAACN,GAAD,MAAiB,CAAC7D,KAAMwD,EAAoBK,eAC/DO,EAA0B,SAACP,EAAYG,GAAb,MAAyB,CAC5DhE,KA1DiC,oDA2DjC6D,aACAG,WAeEK,EAAkB,uCAAG,WAAOlE,EAAU6D,EAAQM,EAAWC,GAApC,SAAAC,EAAA,6DACvBrE,EAASiE,GAAwB,EAAMJ,IADhB,SAEAM,EAAUN,GAFV,OAGU,IAHV,OAGVS,KAAKC,YACdvE,EAASoE,EAAcP,IAE3B7D,EAASiE,GAAwB,EAAOJ,IANjB,2CAAH,4DAqBTW,EArFM,WAAmC,IAAlC7E,EAAiC,uDAAzBZ,EAAca,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKmD,EACD,OAAO,KACArD,EADP,CAEI2D,MAAOb,EAAoB9C,EAAM2D,MAAO1D,EAAOiE,OAAQ,KAAM,CAACY,UAAU,MAEhF,KAAKxB,EACD,OAAO,KACAtD,EADP,CAEI2D,MAAOb,EAAoB9C,EAAM2D,MAAO1D,EAAOiE,OAAQ,KAAM,CAACY,UAAU,MAEhF,KAAKvB,EACD,OAAO,KAAIvD,EAAX,CAAkB2D,MAAO1D,EAAO0D,QAEpC,KAAKH,EACD,OAAO,KAAIxD,EAAX,CAAkB8D,YAAa7D,EAAO6D,cAE1C,KAAKL,EACD,OAAO,KAAIzD,EAAX,CAAkB6D,gBAAiB5D,EAAO8E,QAE9C,KAAKrB,EACD,OAAO,KAAI1D,EAAX,CAAkB+D,WAAY9D,EAAO8D,aAEzC,IAnC6B,oDAoCzB,OAAO,KACA/D,EADP,CAEIgE,oBAAqB/D,EAAO8D,WAAP,sBACX/D,EAAMgE,qBADK,CACgB/D,EAAOiE,SACtClE,EAAMgE,oBAAoBgB,QAAO,SAAAzF,GAAE,OAAIA,IAAOU,EAAOiE,YAGnE,QACI,OAAOlE,I,sGCHJiF,GA5CG,SAAC,GAKf,IAL8F,IAA9EC,EAA6E,EAA7EA,gBAAiBtB,EAA4D,EAA5DA,SAAUE,EAAkD,EAAlDA,YAAaqB,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBtB,GAEzC4B,EAAQ,GACLC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GATiD,EAUnDQ,mBAAS,GAV0C,mBAUtFC,EAVsF,KAUvEC,EAVuE,KAWvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAG/C,OAAO,yBAAKpE,UAAWiF,IAAOC,WACzBL,EAAgB,GACjB,4BAAQ7E,UAAWiF,IAAOE,IAAKC,QAAS,WACpCN,EAAiBD,EAAgB,KAEjC,yBAAK7E,UAAWiF,IAAOI,QAASC,IAAKC,QAGxCf,EACIR,QAAO,SAAAwB,GAAC,OAAIA,GAAKT,GAAyBS,GAAKR,KAC/C7C,KAAI,SAACqD,GACF,OAAO,0BAAMxF,UAAWyF,IAAG,eACtBR,IAAOS,aAAe5C,IAAgB0C,GACxCP,IAAOU,YACGC,IAAKJ,EACLJ,QAAS,SAACS,GACN1B,EAAcqB,KACdA,MAExBb,EAAeE,GAChB,4BAAQ7E,UAAWiF,IAAOE,IAClBC,QAAS,WACbN,EAAiBD,EAAgB,KAFrC,IAGI,yBAAK7E,UAAWiF,IAAOI,QAASC,IAAKQ,U,oBCClCC,GAvCF,SAAC3F,GACV,OACI,yBAAKJ,UAAWC,IAAE+F,SACd,yBAAKhG,UAAWC,IAAEsB,MACd,yBAAKvB,UAAWC,IAAEzB,QACd,kBAAC,IAAD,CAASgD,GAAI,YAAcpB,EAAM6F,KAAK1H,IAClC,yBAAK2H,IAAK,SAAUZ,IAAgC,MAA3BlF,EAAM6F,KAAKE,OAAOC,MAAgBhG,EAAM6F,KAAKE,OAAOC,MAAQC,KAChFrG,UAAWC,IAAEoG,cAG1B,yBAAKrG,UAAWC,IAAEqG,MACd,yBAAKtG,UAAWC,IAAE3B,MAAO8B,EAAM6F,KAAK3H,MACpC,yBAAK0B,UAAWC,IAAEsG,QAAUnG,EAAM6F,KAAKM,UAG/C,yBAAKvG,UAAWC,IAAEuG,QACbpG,EAAM6F,KAAKnC,SACN,4BAAQ9D,UAAWC,IAAEwG,OACbC,SAAUtG,EAAM4C,oBACX2D,MAAK,SAAApI,GAAE,OAAIA,IAAO6B,EAAM6F,KAAK1H,MAClC6G,QAAS,WACLhF,EAAMwG,SAASxG,EAAM6F,KAAK1H,MAJtC,YAQA,4BAAQyB,UAAWC,IAAEwG,OACbC,SAAUtG,EAAM4C,oBACX2D,MAAK,SAAApI,GAAE,OAAIA,IAAO6B,EAAM6F,KAAK1H,MAClC6G,QAAS,WACLhF,EAAMqG,OAAOrG,EAAM6F,KAAK1H,MAJpC,aCNPsI,GAlBD,SAACzG,GACX,OACI,yBAAKJ,UAAWC,IAAE6G,MACd,kBAAC,GAAD,CAAWhE,YAAa1C,EAAM0C,YACnBqB,cAAe/D,EAAM+D,cACrBD,gBAAiB9D,EAAMyC,gBACvBD,SAAUxC,EAAMwC,WAE1BxC,EAAMuC,MAAMR,KAAI,SAAAC,GAAC,OAAI,kBAAC,GAAD,CAAM6D,KAAM7D,EACNwD,IAAKxD,EAAE7D,GACPyE,oBAAqB5C,EAAM4C,oBAC3B4D,SAAUxG,EAAMwG,SAChBH,OAAQrG,EAAMqG,c,2BCZzCM,GAAWC,cAJE,SAAChI,GACvB,OAAOA,EAAMiI,UAAUtE,SAG8B,SAACA,GACtD,OAAOA,EAAMqB,QAAO,SAAA5B,GAAC,OAAI,QAGhB8E,GAAc,SAAClI,GACxB,OAAOA,EAAMiI,UAAUrE,UAGduE,GAAqB,SAACnI,GAC/B,OAAOA,EAAMiI,UAAUpE,iBAGduE,GAAiB,SAACpI,GAC3B,OAAOA,EAAMiI,UAAUnE,aAGduE,GAAgB,SAACrI,GAC1B,OAAOA,EAAMiI,UAAUlE,YAGduE,GAAyB,SAACtI,GACnC,OAAOA,EAAMiI,UAAUjE,qBCNrBuE,G,2MAOFpD,cAAgB,SAACwB,GAAgB,IACtB/C,EAAY,EAAKxC,MAAjBwC,SACP,EAAKxC,MAAM2G,SAASpB,EAAY/C,I,mFAPf,IAAD,EACgB4E,KAAKpH,MAA9B0C,EADS,EACTA,YAAaF,EADJ,EACIA,SACpB4E,KAAKpH,MAAM2G,SAASjE,EAAaF,K,+BASjC,OAAO,oCACF4E,KAAKpH,MAAM2C,WAAa,kBAAC0E,GAAA,EAAD,MAAe,KACxC,kBAAC,GAAD,CAAOtD,cAAeqD,KAAKrD,cACpBtB,gBAAiB2E,KAAKpH,MAAMyC,gBAC5BD,SAAU4E,KAAKpH,MAAMwC,SACrBE,YAAa0E,KAAKpH,MAAM0C,YACxBH,MAAO6E,KAAKpH,MAAMuC,MAClBiE,SAAUY,KAAKpH,MAAMwG,SACrBH,OAAQe,KAAKpH,MAAMqG,OACnBzD,oBAAqBwE,KAAKpH,MAAM4C,2B,GAtBtB0E,IAAMC,WAsCpBC,gBACXC,aAZoB,SAAC7I,GACrB,MAAO,CACH2D,MAAOoE,GAAS/H,GAChB4D,SAAUsE,GAAYlI,GACtB6D,gBAAiBsE,GAAmBnI,GACpC8D,YAAasE,GAAepI,GAC5B+D,WAAYsE,GAAcrI,GAC1BgE,oBAAqBsE,GAAuBtI,MAKvB,CACrByH,OL+Bc,SAACvD,GACnB,8CAAO,WAAO7D,GAAP,SAAAqE,EAAA,sDACHH,EAAmBlE,EAAU6D,EAAQ4E,IAASrB,OAAOsB,KAAKD,KAAW7E,GADlE,2CAAP,mDAAM,IKhCM2D,SLqCQ,SAAC1D,GACrB,8CAAO,WAAO7D,GAAP,SAAAqE,EAAA,sDACHH,EAAmBlE,EAAU6D,EAAQ4E,IAASlB,SAASmB,KAAKD,KAAW3E,GADpE,2CAAP,mDAAM,IKtCgBC,iBAAgBE,0BAAyByD,SLWvC,SAACiB,EAAMpF,GAC/B,8CAAO,WAAOvD,GAAP,eAAAqE,EAAA,6DACHrE,EAASgE,GAAiB,IAC1BhE,EAAS+D,EAAe4E,IAFrB,SAGcF,IAASf,SAASiB,EAAMpF,GAHtC,OAGCe,EAHD,OAIHtE,EAASgE,GAAiB,IAC1BhE,GApBiBsD,EAoBCgB,EAAK5B,MApBK,CAAC7C,KAAMqD,EAAWI,WAqB9CtD,GAnB2BwD,EAmBCc,EAAKsE,WAnBe,CACpD/I,KAAMuD,EACNsB,MAAOlB,KAWA,iCAbuB,IAACA,EAFVF,IAed,OAAP,mDAAM,MKdKiF,CAIbL,I,oBC1BaW,GAhBA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAE5B,OACI,4BAAQrI,UAAWC,KAAEqI,QACjB,yBAAKtI,UAAWC,KAAEsI,QACbJ,EAAS,yBAAKnI,UAAWC,KAAEuI,SACpB,wBAAIxI,UAAWC,KAAE3B,MAAO8J,GACxB,0BAAMpI,UAAWC,KAAEwI,UAAWrD,QAAS,kBAAMiD,MAA7C,WAEJ,kBAAC,IAAD,CAAU7G,GAAG,c,skBC5BjC,IAAMkH,GAAgB,oCAGhBtK,GAAe,CACjB8E,OAAQ,KACRyF,MAAO,KACPP,MAAO,KACPD,QAAQ,EACRS,WAAY,MAoBHC,GAAkB,SAAC3F,EAAQyF,EAAOP,EAAOD,GAAvB,MAAmC,CAC9DjJ,KAAMwJ,GACNI,QAAS,CAAC5F,SAAQyF,QAAOP,QAAOD,YAGvBY,GAAuB,SAACH,GAAD,MAAiB,CACjD1J,KAjC4B,8CAkC5B4J,QAAS,CAACF,gBAGDI,GAAkB,yDAAM,WAAO3J,GAAP,uBAAAqE,EAAA,sEACVuF,IAAQC,KADE,OAEA,KAD3BC,EAD2B,QAEpBxF,KAAKC,aAAmB,EACRuF,EAASxF,KAAKA,KAAlCpF,EAD2B,EAC3BA,GAAIoK,EADuB,EACvBA,MAAOP,EADgB,EAChBA,MAChB/I,EAASwJ,GAAgBtK,EAAIoK,EAAOP,GAAO,KAJd,2CAAN,uDAsBlBgB,GAAgB,yDAAM,WAAO/J,GAAP,iBAAAqE,EAAA,sEACR2F,IAAYD,gBADJ,OACzBD,EADyB,OAEzBP,EAAaO,EAASxF,KAAK2F,IACjCjK,EAAS0J,GAAqBH,IAHC,2CAAN,uDAadW,GA9DK,WAAmC,IAAlCvK,EAAiC,uDAAzBZ,GAAca,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKwJ,GAKL,IAjBwB,8CAkBpB,OAAO,MACA1J,EADP,GAEOC,EAAO6J,SAElB,QACI,OAAO9J,ICRJ6I,gBAPO,SAAC7I,GACnB,MAAO,CACHoJ,MAAOpJ,EAAMwK,KAAKpB,MAClBD,OAAQnJ,EAAMwK,KAAKrB,UAIa,CAACa,mBAAiBX,ODkDpC,yDAAM,WAAOhJ,GAAP,SAAAqE,EAAA,sEACDuF,IAAQZ,SADP,OAES,IAFT,OAEX1E,KAAKC,YACdvE,EAASwJ,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDClDPhB,EAbU,SAACzH,GACtB,OACI,kBAAC,GAAD,iBAAYA,EAAZ,CAAmBiI,OAAQjI,EAAMiI,a,gDCwB1BoB,GAFQC,aAAU,CAACC,KAAM,SAAjBD,EAxBL,SAACtJ,GACf,OACI,0BAAMwJ,SAAUxJ,EAAMyJ,cACjBrJ,aAAY,QAAS,QAAS,CAACsJ,MAAWvJ,MAC1CC,aAAY,WAAY,WAAY,CAACsJ,MAAWvJ,KAC7C,CAACrB,KAAM,aACVsB,aAAY,KAAM,aAAc,GAAID,KAAO,CAACrB,KAAM,YAC/C,eAEHkB,EAAMwI,YAAc,yBAAKtD,IAAKlF,EAAMwI,WAAY1C,IAAI,YACpD9F,EAAMwI,YAAcpI,aAAY,qBAAsB,UACnD,CAACsJ,MAAWvJ,MAEfH,EAAMP,OAAS,yBAAKG,UAAWC,KAAE8J,kBAC7B3J,EAAMP,OAGX,6BACI,8CCMDgI,gBALS,SAAC7I,GAAD,MAAY,CAChCmJ,OAAQnJ,EAAMwK,KAAKrB,OACnBS,WAAY5J,EAAMwK,KAAKZ,cAGa,CAACR,MHmBpB,SAACO,EAAOqB,EAAUC,EAAWC,GAA7B,8CAAyC,WAAO7K,GAAP,iBAAAqE,EAAA,sEACnCuF,IAAQb,MAAMO,EAAOqB,EAAUC,EAAWC,GADP,OAEzB,KAD3Bf,EADoD,QAE7CxF,KAAKC,WACdvE,EAAS2J,OAEwB,KAA7BG,EAASxF,KAAKC,YACdvE,EAAS+J,MAEPtK,EAAUqK,EAASxF,KAAKwG,SAASC,OAAS,EAC1CjB,EAASxF,KAAKwG,SAAS,GAAK,aAClC9K,EAASgL,aAAW,QAAS,CAACC,OAAQxL,MAVgB,2CAAzC,wDGnBN+I,EAvBD,SAACzH,GAMX,OAAIA,EAAM+H,OACC,kBAAC,IAAD,CAAU3G,GAAI,aAIrB,6BACI,qCACA,kBAAC,GAAD,CAAgBoI,SAXP,SAACW,GACdnK,EAAMgI,MAAMmC,EAAS5B,MAAO4B,EAASP,SAAUO,EAASN,WAAYM,EAASL,UAUrCtB,WAAYxI,EAAMwI,iB,6jBClBlE,IAAM4B,GAAsB,yCAEtBpM,GAAe,CACjBqM,aAAa,GAyBFC,GArBI,WAAmC,IAAlC1L,EAAiC,uDAAzBZ,GAAca,EAAW,uCACjD,OAAQA,EAAOC,MACX,KAAKsL,GACD,OAAO,MACAxL,EADP,CAEIyL,aAAa,IAErB,QACI,OAAOzL,I,mBCjBbZ,GAAe,GAMNuM,GAJQ,WAAmC,IAAlC3L,EAAiC,uDAAzBZ,GAAyB,iCACrD,OAAOY,G,oBCQL4L,GAAWC,aAAgB,CAC7BC,YAAaC,KACbC,aAAcjM,KACdkM,QAASN,GACT1D,UAAWpD,EACX2F,KAAMD,GACNI,KAAMuB,KACNC,IAAKT,KAIHU,GAAmBpK,OAAOqK,sCAAwCzD,KAClE0D,GAAQC,aAAYX,GAAUQ,GAAiBI,aAAgBC,QAKrEzK,OAAO0K,QAAUJ,GAEFA,UC1BFK,GAAe,SAAChE,GACzB,OAAO,SAACvH,GACJ,OACI,kBAAC,WAAD,CAAUwL,SAAU,kBAACnE,GAAA,EAAD,OAChB,kBAACE,EAAcvH,MCQzByL,GAAmBnE,IAAMoE,MAAK,kBAChC,iCACEC,GAAoBrE,IAAMoE,MAAK,kBAAM,iCACrCE,GAAmBtE,IAAMoE,MAAK,kBAAM,iCAEpCG,G,4LAGEzE,KAAKpH,MAAM8L,gBACXlL,OAAOmL,iBAAiB,qBAAsB3E,KAAK4E,2B,6CAInDpL,OAAOqL,oBAAoB,qBAAsB7E,KAAK4E,2B,+BAKtD,OAAK5E,KAAKpH,MAAMqK,YAIZ,yBAAKzK,UAAWC,IAAE+F,SACd,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKhG,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEqM,KAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUjL,GAAI,gBAClD,kBAAC,IAAD,CAAO+K,OAAK,EAACC,KAAK,WACXC,OAAQd,GAAaI,MAC5B,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,mBACXC,OAAQd,GAAaE,MAC5B,kBAAC,IAAD,CAAOW,KAAK,oBAAoBC,OAAQd,GAAaK,MACrD,kBAAC,IAAD,CAAOQ,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,oDAlBnC,kBAAChF,GAAA,EAAD,U,GAdDC,IAAMC,WA4ClB+E,GAAe9E,aACjB+E,IACA9E,aANoB,SAAC7I,GAAD,MAAY,CAChCyL,YAAazL,EAAMmM,IAAIV,eAKE,CAACyB,cJ5CD,kBAAM,SAAC7M,GAChC,IAAMuN,EAAUvN,EAAS2J,MACzB6D,QAAQC,IAAI,CAACF,IAAUG,MAAK,WACxB1N,EALiC,CAACH,KAAMsL,YI4C3B5C,CAE0BqE,IAUhCe,GARU,WACrB,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAU1B,MAAOA,IACb,kBAACoB,GAAD,S,OClEZO,IAASR,OAAO,kBAAC,GAAD,MAAqBS,SAASC,eAAe,SpB2HvD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMP,MAAK,SAAAQ,GACjCA,EAAaC,iB,mBqBlInBjO,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,IAAM,uBAAuB,QAAU,2BAA2B,aAAe,kC,wFCUxKiI,IANG,WACd,OACI,yBAAKzH,UAAWC,IAAEwN,WAAW,yBAAKnI,IAAKoI,S,mBCN/CnO,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,QAAU,wBAAwB,MAAQ,sBAAsB,UAAY,0BAA0B,KAAO,qBAAqB,MAAQ,wB,gCCD5N,oEAAO,IAAMsK,EAAW,SAAC6D,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMvD,OAASyD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCLlCtO,EAAOC,QAAU,CAAC,QAAU,qBAAqB,QAAU,qBAAqB,GAAK,kB,+BCDrF,qJAEMsO,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNrG,EAAW,CACpBf,SADoB,SACXjE,EAAaF,GAClB,OAAOkL,EAASM,IAAT,qBAA2BtL,EAA3B,kBAAgDF,IAClDmK,MAAK,SAAA5D,GACF,OAAOA,EAASxF,SAG5B8C,OAPoB,SAObvD,GACH,OAAO4K,EAASO,KAAT,iBAAwBnL,KAEnC0D,SAVoB,SAUX1D,GACL,OAAO4K,EAASQ,OAAT,iBAA0BpL,KAErCqL,WAboB,SAaTrL,GACP,OAAOsL,EAAWD,WAAWrL,KAIxBsL,EAAa,CACtBD,WADsB,SACXrL,GACP,OAAO4K,EAASM,IAAI,WAAalL,IAErCuL,UAJsB,SAIZvL,GACN,OAAO4K,EAASM,IAAI,kBAAoBlL,IAE5CwL,aAPsB,SAOTnI,GACT,OAAOuH,EAASa,IAAT,kBAAgC,CAACpI,OAAQA,KAEpDqI,UAVsB,SAUZC,GACN,IAAMtE,EAAW,IAAIuE,SAErB,OADAvE,EAASwE,OAAO,QAASF,GAClBf,EAASa,IAAT,iBAA+BpE,EAAU,CAC5C4D,QAAS,CAAC,eAAgB,0BAGlCa,YAjBsB,SAiBVC,GACR,OAAOnB,EAASa,IAAT,WAAyBM,KAI3BhG,EAAU,CACnBC,GADmB,WAEf,OAAO4E,EAASM,IAAT,YAEXhG,MAJmB,SAIbO,EAAOqB,EAAUC,GAA6B,IAAjBC,EAAgB,uDAAN,KACzC,OAAO4D,EAASO,KAAT,aAA4B,CAAC1F,QAAOqB,WAAUC,aAAYC,aAErE7B,OAPmB,WAQf,OAAOyF,EAASQ,OAAT,gBAIFjF,EAAc,CACvBD,cADuB,WAEnB,OAAO0E,EAASM,IAAT,+B,g2BC9Df,IAAMc,EAAW,kCACXC,EAAmB,0CACnBC,EAAa,oCACbC,EAAqB,4CACrBC,EAAc,qCAEdlR,EAAe,CACjBmR,MAAO,CACH,CAAChR,GAAI,EAAGO,QAAS,oBAAqB0Q,UAAW,IACjD,CAACjR,GAAI,EAAGO,QAAS,mBAAoB0Q,UAAW,KAEpDP,QAAS,KACT1I,OAAQ,IAsCCkJ,EAAuB,SAACC,GAAD,MAAkB,CAACxQ,KAAMgQ,EAAUQ,gBAE1DC,EAAY,SAACpJ,GAAD,MAAa,CAACrH,KAAMkQ,EAAY7I,WAI5CqJ,EAAkB,SAAC1M,GAAD,8CAAY,WAAO7D,GAAP,eAAAqE,EAAA,sEAChBoE,IAASyG,WAAWrL,GADJ,OACjCiG,EADiC,OAEvC9J,GAP2B4P,EAOH9F,EAASxF,KAPO,CAACzE,KAAMiQ,EAAkBF,aAK1B,iCALb,IAACA,IAKY,OAAZ,uDAKlBR,EAAY,SAACvL,GAAD,8CAAY,WAAO7D,GAAP,eAAAqE,EAAA,sEACV8K,IAAWC,UAAUvL,GADX,OAC3BiG,EAD2B,OAEjC9J,EAASsQ,EAAUxG,EAASxF,OAFK,2CAAZ,uDAKZ+K,EAAe,SAACnI,GAAD,8CAAY,WAAOlH,GAAP,SAAAqE,EAAA,sEACb8K,IAAWE,aAAanI,GADX,OAEH,IAFG,OAEvB5C,KAAKC,YACdvE,EAASsQ,EAAUpJ,IAHa,2CAAZ,uDAOfqI,EAAY,SAACiB,GAAD,8CAAU,WAAOxQ,GAAP,eAAAqE,EAAA,sEACR8K,IAAWI,UAAUiB,GADb,OAEE,KAD3B1G,EADyB,QAElBxF,KAAKC,YACdvE,GAtByB8G,EAsBCgD,EAASxF,KAAKA,KAAKwC,OAtBR,CAACjH,KAAMmQ,EAAoBlJ,YAmBrC,iCAnBH,IAACA,IAmBE,OAAV,uDAOZ6I,EAAc,SAACC,GAAD,8CAAa,WAAO5P,EAAUyQ,GAAjB,iBAAApM,EAAA,6DAC9BR,EAAS4M,IAAWtG,KAAKtG,OADK,SAEbsL,IAAWQ,YAAYC,GAFV,UAGH,KAD3B9F,EAF8B,QAGvBxF,KAAKC,WAHkB,gBAIhCvE,EAASuQ,EAAgB1M,IAJO,8BAMhC7D,EAASgL,YAAW,eAAgB,CAACC,OAAQnB,EAASxF,KAAKwG,SAAS,MANpC,kBAOzB0C,QAAQkD,OAAO5G,EAASxF,KAAKwG,SAAS,KAPb,4CAAb,yDAWZY,IA3EQ,WAAmC,IAAlC/L,EAAiC,uDAAzBZ,EAAca,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKgQ,EACD,IAAIc,EAAU,CACVzR,GAAI,EACJO,QAASG,EAAOyQ,YAChBF,UAAW,GAEf,OAAO,EAAP,GACOxQ,EADP,CAEIuQ,MAAM,GAAD,mBAAMvQ,EAAMuQ,OAAZ,CAAmBS,IACxBN,YAAa,KAGrB,KAAKN,EACD,OAAO,EAAP,GACOpQ,EADP,CAEIuH,OAAQtH,EAAOsH,SAGvB,KAAK4I,EACD,OAAO,EAAP,GAAWnQ,EAAX,CAAkBiQ,QAAShQ,EAAOgQ,UAEtC,KAAKK,EACD,OAAO,EAAP,GAAWtQ,EAAX,CAAkBuQ,MAAOvQ,EAAMuQ,MAAMvL,QAAO,SAAAwB,GAAC,OAAIA,EAAEjH,KAAOU,EAAOgR,YAErE,KAAKZ,EACD,OAAO,EAAP,GAAWrQ,EAAX,CAAkBiQ,QAAQ,EAAD,GAAMjQ,EAAMiQ,QAAZ,CAAqB9I,OAAQlH,EAAOkH,WAEjE,QACI,OAAOnH,M","file":"static/js/main.66960e56.chunk.js","sourcesContent":["import ava from \"../../src/assets/images/user.png\";\r\n\r\nimport React from \"react\";\r\nimport {reset} from 'redux-form';\r\n\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        {name: 'Max', id: 1, avatar: ava},\r\n        {name: 'Vlad', id: 2, avatar: ava},\r\n        {name: 'Vanya', id: 3, avatar: ava},\r\n        {name: 'Ilya', id: 4, avatar: ava},\r\n        {name: 'Anastasiya', id: 5, avatar: ava},\r\n        {name: 'Dimych', id: 6, avatar: ava}\r\n    ],\r\n    messagesData: [\r\n        {text: 'Hi', id: 1},\r\n        {text: 'See you later', id: 2},\r\n        {text: 'No problem', id: 3},\r\n        {text: 'okay', id: 4},\r\n        {text: 'ok', id: 5},\r\n        {text: 'not yet', id: 6}\r\n    ],\r\n    dialogs: [\r\n        {you: true, message: 'Hi'},\r\n        {you: false, message: 'How\\'s it going?'}\r\n    ]\r\n\r\n};\r\n\r\nconst  messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let newMessage = {\r\n                you: true,\r\n                message: action.message\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogs: [...state.dialogs, newMessage]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default messagesReducer;\r\n\r\nconst sendMessageAC = (message) => ({ type: SEND_MESSAGE, message });\r\n\r\nexport const sendMessage = (text) => {\r\n    return (dispatch) => {\r\n        dispatch(sendMessageAC(text));\r\n        dispatch(reset('dialogWithFriend'))\r\n    }\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__krBBL\"};","module.exports = __webpack_public_path__ + \"static/media/prevBtn.1d79418f.svg\";","module.exports = __webpack_public_path__ + \"static/media/nextBtn.c46d3e94.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.dd067c7a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__jjRrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"users_main__1YCxm\",\"wrapper\":\"users_wrapper__19FtL\",\"item\":\"users_item__3vkrY\",\"userPhoto\":\"users_userPhoto__3UJlr\",\"avatar\":\"users_avatar__1in-E\",\"info\":\"users_info__1xSiq\",\"name\":\"users_name__2b6c8\",\"status\":\"users_status__3IcnY\",\"button\":\"users_button__2EomJ\",\"follow\":\"users_follow__3L8N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1OJLH\",\"navList\":\"Navbar_navList__qa2Cx\",\"item\":\"Navbar_item__3KyAM\",\"activeNav\":\"Navbar_activeNav__1iNNC\",\"friends\":\"Navbar_friends__2YuxU\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validate}\r\n               component={component}\r\n               {...props}/>{text}\r\n    </div>);\r\n\r\nexport const Dialog = ({input, meta}) => {\r\n\r\n    const error = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <textarea className={error ? s.textareaDialog + ' ' + s.error :\r\n                s.textareaDialog} {...input} />\r\n            {error && <span className={s.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3bDX4\",\"error\":\"FormsControls_error__2aktV\",\"formSummaryError\":\"FormsControls_formSummaryError__1pruc\",\"textarea\":\"FormsControls_textarea__5GOaT\",\"textareaDialog\":\"FormsControls_textareaDialog__2FU_y\",\"errorMessage\":\"FormsControls_errorMessage__3AyMm\",\"inputField\":\"FormsControls_inputField__opXlg\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Post is cached for offline use.\" message.\r\n              console.log('Post is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.navList}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeNav}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeNav}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeNav}>Users</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.settings}`}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.activeNav}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/validators/objects-helpers\";\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport prev from '../../../assets/images/buttons/prevBtn.svg';\r\nimport next from '../../../assets/images/buttons/nextBtn.svg';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button className={styles.btn} onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>\r\n            <img className={styles.btnIcon} src={prev}/>\r\n        </button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button className={styles.btn}\r\n                onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}> <img className={styles.btnIcon} src={next} /></button>}\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.item}>\r\n                <div className={s.avatar}>\r\n                    <NavLink to={'/profile/' + props.user.id}>\r\n                        <img alt={\"avatar\"} src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.info}>\r\n                    <div className={s.name}>{props.user.name}</div>\r\n                    <div className={s.status }>{props.user.status}</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.button}>\r\n                {props.user.followed\r\n                    ? <button className={s.follow}\r\n                              disabled={props.followingInProgress\r\n                                  .some(id => id === props.user.id)}\r\n                              onClick={() => {\r\n                                  props.unfollow(props.user.id)\r\n                              }}>\r\n                        Unfollow\r\n                    </button>\r\n                    : <button className={s.follow}\r\n                              disabled={props.followingInProgress\r\n                                  .some(id => id === props.user.id)}\r\n                              onClick={() => {\r\n                                  props.follow(props.user.id)\r\n                              }}>\r\n                        Follow\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User","import React from 'react'\r\nimport s from './users.module.css'\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div className={s.main}>\r\n            <Paginator currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}\r\n                       totalItemsCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}/>\r\n\r\n            {props.users.map(u => <User user={u}\r\n                                        key={u.id}\r\n                                        followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow}\r\n                                        follow={props.follow}/>)}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\n\r\n const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=> {\r\n    return users.filter(u => true)\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n    })\r\n)(UsersContainer)","// import React from 'react';\r\n// import s from './Header.module.css';\r\n// import {NavLink} from \"react-router-dom\";\r\n//\r\n// const Header = (props) => {\r\n//     return (\r\n//         <header className={s.header}>\r\n//             <div className={s.loginBlock}>\r\n//                 {props.isAuth\r\n//                     ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n//                     : <NavLink to={'/login'} activeClassName={s.activeLink}>Log in</NavLink>}\r\n//             </div>\r\n//         </header>\r\n//     )\r\n// };\r\n//\r\n// export default Header\r\n\r\nimport React from 'react';\r\nimport s from './Header.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Header = ({isAuth, login, logout}) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.banner}>\r\n                {isAuth ? <div className={s.logFrom}>\r\n                        <h3 className={s.name}>{login}</h3>\r\n                        <span className={s.logoutBtn} onClick={() => logout()}>Logout</span>\r\n                    </div> :\r\n                    <Redirect to='/login' />\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe,captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0\r\n            ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nconst  HeaderContainer = (props) => {\r\n    return (\r\n        <Header {...props} logout={props.logout} />\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from 'react'\r\nimport { reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport s from '../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input,\r\n                {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"},\r\n                \"remember me\")}\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=\"captcha\"/>}\r\n            {props.captchaUrl && createField(\"Symbols from image\", \"captcha\",\r\n                [required], Input)}\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm","import React from 'react'\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","const initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport s from './App.module.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() =>\r\n    import('./components/Messages/Dialogs/DialogsContainer'));\r\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>;\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.content}>\r\n                    <div className={s.bg}/>\r\n                    <Switch>\r\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                        <Route exact path='/dialogs'\r\n                               render={withSuspense(MessagesContainer)}/>\r\n                        <Route exact path='/dialogs/:userId'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <LoginPage/>}/>\r\n                        <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SocialNetworkApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SocialNetworkApp;\r\n\r\n","import React from 'react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport SocialNetworkApp from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1R0mM\",\"pageNumber\":\"Paginator_pageNumber__2UC0X\",\"btn\":\"Paginator_btn__3o7St\",\"btnIcon\":\"Paginator_btnIcon__ewarg\",\"selectedPage\":\"Paginator_selectedPage__3ScE-\"};","import preloader from \"../../../assets/images/preloader/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\nimport s from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.container}><img src={preloader} /></div>\r\n    )\r\n};\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__48vn1\",\"banner\":\"Header_banner__3DtHZ\",\"logFrom\":\"Header_logFrom__F1Wg2\",\"login\":\"Header_login__3xkSX\",\"logoutBtn\":\"Header_logoutBtn__1r2kf\",\"name\":\"Header_name__Mw1Cf\",\"error\":\"Header_error__1pKnf\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Qm7o\",\"content\":\"App_content__3nMuA\",\"bg\":\"App_bg__3gsts\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profile/SAVE_PHOTO_SUCCESS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Its my first post', likeCount: 12},\r\n        {id: 2, message: 'Hi, how are you?', likeCount: 14}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUsersProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}