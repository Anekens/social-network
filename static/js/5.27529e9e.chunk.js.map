{"version":3,"sources":["components/Messages/Dialogs/Dialogs.module.css","components/Common/utils/validator.js","components/Messages/Dialogs/Dialogs.jsx","components/Messages/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","length","maxLengthCreator","DialogReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","className","s","textarea","type","component","Dialog","name","validate","sendBtn","Dialogs","props","match","params","userId","Message","you","messageItem","messageItemYour","text","userAva","src","ava","chat","messagesPage","dialogs","map","m","message","content","sendMessageForm","sendMessage","newMessage","compose","connect","state","dispatch","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,gBAAkB,iCAAiC,QAAU,yBAAyB,KAAO,sBAAsB,gBAAkB,iCAAiC,SAAW,0BAA0B,QAAU,2B,uGCDxSC,EAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,K,yBC8C/CC,ED5C0B,SAACA,GAAD,OAAe,SAAAF,GAC3C,OAAOA,EAAMG,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkED,GC2C3DG,CAAiB,IAc7BC,EAAkBC,YAAU,CAACC,KAAM,oBAAjBD,EAZL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACjB,OAEQ,0BAAMC,SAAUD,GACZ,kBAACE,EAAA,EAAD,CAAOC,UAAWC,IAAEC,SAAUC,KAAK,WAAWC,UAAWC,IAAQC,KAAK,aAC/DC,SAAU,CAACnB,EAAUG,KAC5B,4BAAQS,UAAWC,IAAEO,SAArB,YAQDC,EAtDC,SAACC,GACEA,EAAMC,MAAMC,OAAOC,OAAlC,IAEMC,EAAU,SAACJ,GACb,OACI,oCACKA,EAAMK,IACH,yBAAKf,UAAWC,IAAEe,YAAc,IAAMf,IAAEgB,iBACnCP,EAAMQ,KACP,yBAAKlB,UAAWC,IAAEkB,QAASC,IAAKC,OAEpC,yBAAKrB,UAAWC,IAAEe,aACd,yBAAKhB,UAAWC,IAAEkB,QAASC,IAAKC,MAC/BX,EAAMQ,QAOrBI,EAAOZ,EAAMa,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAACZ,EAAD,CAASC,IAAKW,EAAEX,IAAKG,KAAMQ,EAAEC,aAM9E,OACI,yBAAK3B,UAAWC,IAAE2B,SACd,yBAAK5B,UAAWC,IAAEqB,MACbA,GAEL,yBAAKtB,UAAWC,IAAE4B,iBACd,kBAACnC,EAAD,CAAiBI,SAVP,SAACT,GACnBqB,EAAMoB,YAAYzC,EAAM0C,kB,wBCFjBC,sBACXC,aAfoB,SAACC,GACrB,MAAO,CACHX,aAAcW,EAAMX,iBAID,SAACY,GACxB,MAAO,CACHL,YAAa,SAACH,GACVQ,EAASL,YAAYH,SAO7BS,IAFWJ,EAtBU,SAACtB,GAGtB,OACI,kBAAC,EAAYA","file":"static/js/5.27529e9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__1z63m\",\"messageItem\":\"Dialogs_messageItem__2e5WH\",\"messageItemYour\":\"Dialogs_messageItemYour__3WWhx\",\"userAva\":\"Dialogs_userAva__PPF99\",\"chat\":\"Dialogs_chat__1u2D7\",\"sendMessageForm\":\"Dialogs_sendMessageForm__1Y4j3\",\"textarea\":\"Dialogs_textarea__3inKS\",\"sendBtn\":\"Dialogs_sendBtn__egzXl\"};","export const required = value => value ? undefined : ' ';\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Common/utils/validator\";\r\nimport {Dialog} from \"../../Common/FormsControls/FormsControls\";\r\nimport ava from '../../../assets/images/user.png';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const userId = props.match.params.userId;\r\n\r\n    const Message = (props) => {\r\n        return (\r\n            <>\r\n                {props.you ?\r\n                    <div className={s.messageItem + ' ' + s.messageItemYour}>\r\n                        {props.text}\r\n                        <img className={s.userAva} src={ava}/>\r\n                    </div> :\r\n                    <div className={s.messageItem}>\r\n                        <img className={s.userAva} src={ava}/>\r\n                        {props.text}\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    };\r\n\r\n    const chat = props.messagesPage.dialogs.map(m => <Message you={m.you} text={m.message}/>);\r\n\r\n    const onSendMessage = (value) => {\r\n        props.sendMessage(value.newMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.chat}>\r\n                {chat}\r\n            </div>\r\n            <div className={s.sendMessageForm}>\r\n                <DialogReduxForm onSubmit={onSendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst DialogForm = ({handleSubmit}) => {\r\n    return (\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <Field className={s.textarea} type='textarea' component={Dialog} name='newMessage'\r\n                       validate={[required, maxLength]}/>\r\n                <button className={s.sendBtn}>send</button>\r\n            </form>\r\n\r\n    )\r\n};\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialogWithFriend'})(DialogForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessage} from \"../../../redux/messages-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n\r\n    return (\r\n        <Dialogs {...props} />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessage(message));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(DialogsContainer);"],"sourceRoot":""}